{"ast":null,"code":"import APP_CONFIG from '../../app.config';\nexport var NodeType = /*#__PURE__*/(() => {\n  (function (NodeType) {\n    NodeType[NodeType[\"ConceptoPrincipal\"] = 0] = \"ConceptoPrincipal\";\n    NodeType[NodeType[\"SinExplorar\"] = 1] = \"SinExplorar\";\n    NodeType[NodeType[\"Concepto\"] = 2] = \"Concepto\";\n    NodeType[NodeType[\"LiteralVacio\"] = 3] = \"LiteralVacio\";\n    NodeType[NodeType[\"LiteralRelleno\"] = 4] = \"LiteralRelleno\";\n    NodeType[NodeType[\"InstanceCount\"] = 5] = \"InstanceCount\";\n    NodeType[NodeType[\"Instance\"] = 6] = \"Instance\";\n    NodeType[NodeType[\"PropiedadConceptoPrincipal\"] = 7] = \"PropiedadConceptoPrincipal\";\n    NodeType[NodeType[\"ValorPropiedadInstancia\"] = 8] = \"ValorPropiedadInstancia\";\n  })(NodeType || (NodeType = {}));\n\n  return NodeType;\n})();\nexport var RelationState = /*#__PURE__*/(() => {\n  (function (RelationState) {\n    RelationState[RelationState[\"SinExplorar\"] = 0] = \"SinExplorar\";\n    RelationState[RelationState[\"Exploradas\"] = 1] = \"Exploradas\";\n    RelationState[RelationState[\"Ocultas\"] = 2] = \"Ocultas\";\n  })(RelationState || (RelationState = {}));\n\n  return RelationState;\n})();\nexport class Node {\n  constructor(id, type, name, label) {\n    this.displayName = () => {\n      let dn;\n      this.type == NodeType.SinExplorar || this.type == NodeType.LiteralVacio || this.type == NodeType.PropiedadConceptoPrincipal ? dn = '' : dn = this.label[0].toUpperCase() + this.label.substr(1).toLowerCase(); //.substring(1, this.label.indexOf('@')-1);\n\n      return dn;\n    };\n\n    this.linkCount = 0;\n\n    this.normal = () => {\n      return Math.sqrt(this.linkCount / APP_CONFIG.N);\n    };\n\n    this.id = id;\n    this.type = type;\n    this.name = name; // this.state = NodeState.Nuevo;\n\n    this.hidden = false;\n    this.label = label;\n    this.relationState = RelationState.SinExplorar;\n  }\n\n  get r() {\n    let r;\n    this.type == NodeType.SinExplorar || this.type == NodeType.LiteralVacio ? r = 10 : r = 30;\n    return r;\n  }\n\n  get fontSize() {\n    return 1 * this.normal() + 10 + 'px';\n  }\n\n  get color() {\n    //let index = Math.floor(APP_CONFIG.SPECTRUM.length * this.normal());\n    return APP_CONFIG.SPECTRUM[this.type % APP_CONFIG.SPECTRUM.length];\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}