{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../d3\";\nimport * as i2 from \"src/app/services/data-graph.service\";\nimport * as i3 from \"src/app/services/dbpedia.service\";\nfunction GraphComponent__svg_g_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 7);\n  }\n  if (rf & 2) {\n    const link_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"linkVisual\", link_r4);\n  }\n}\nfunction GraphComponent__svg_g_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"g\", 8);\n  }\n  if (rf & 2) {\n    const node_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nodeVisual\", node_r5)(\"draggableNode\", node_r5)(\"draggableInGraph\", ctx_r2.graph);\n  }\n}\nfunction GraphComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"app-spinner\", 10);\n    i0.ɵɵelementEnd();\n  }\n}\nexport let GraphComponent = /*#__PURE__*/(() => {\n  class GraphComponent {\n    onResize(event) {\n      this.graph.initSimulation(this.options);\n    }\n    constructor(d3Service, ref, dataGraphService, dbPediaService) {\n      this.d3Service = d3Service;\n      this.ref = ref;\n      this.dataGraphService = dataGraphService;\n      this.dbPediaService = dbPediaService;\n      this._options = {\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n      this.loading = false;\n    }\n    ngOnInit() {\n      this.nodes = this.dataGraphService.nodes;\n      this.links = this.dataGraphService.links;\n      this.initializeGraph();\n      this.dataGraphService.getRefreshGraph$().subscribe(() => {\n        this.graph.initNodes();\n        this.graph.initLinks();\n      });\n      this.dbPediaService.getLoading$().subscribe(isLoading => {\n        this.loading = isLoading;\n      });\n    }\n    get options() {\n      return this._options = {\n        width: this._options.width,\n        height: this._options.height\n      };\n    }\n    initializeGraph() {\n      this.graph = this.d3Service.getForceDirectedGraph(this.nodes, this.links, this.options);\n      this.graph.ticker.subscribe(d => {\n        this.ref.markForCheck();\n      });\n    }\n    static #_ = this.ɵfac = function GraphComponent_Factory(t) {\n      return new (t || GraphComponent)(i0.ɵɵdirectiveInject(i1.D3Service), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.DataGraphService), i0.ɵɵdirectiveInject(i3.DbPediaService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GraphComponent,\n      selectors: [[\"graph\"]],\n      hostBindings: function GraphComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function GraphComponent_resize_HostBindingHandler($event) {\n            return ctx.onResize($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      decls: 8,\n      vars: 6,\n      consts: [[1, \"svg-graph\", 2, \"width\", \"50%\"], [\"svg\", \"\"], [\"width\", \"100%\", \"height\", \"100%\", \"fill\", \"rgba(163, 204, 187, 0.293)\"], [3, \"zoomableOf\"], [3, \"linkVisual\", 4, \"ngFor\", \"ngForOf\"], [3, \"nodeVisual\", \"draggableNode\", \"draggableInGraph\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"graph-loading\", 4, \"ngIf\"], [3, \"linkVisual\"], [3, \"nodeVisual\", \"draggableNode\", \"draggableInGraph\"], [1, \"graph-loading\"], [\"overlay\", \"true\"]],\n      template: function GraphComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(1, \"svg\", null, 1);\n          i0.ɵɵelement(3, \"rect\", 2);\n          i0.ɵɵelementStart(4, \"g\", 3);\n          i0.ɵɵtemplate(5, GraphComponent__svg_g_5_Template, 1, 1, \"g\", 4);\n          i0.ɵɵtemplate(6, GraphComponent__svg_g_6_Template, 1, 3, \"g\", 5);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(7, GraphComponent_div_7_Template, 2, 0, \"div\", 6);\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(2);\n          i0.ɵɵadvance(1);\n          i0.ɵɵattribute(\"width\", ctx._options.width)(\"height\", ctx._options.height);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"zoomableOf\", _r0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.links);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.nodes);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      changeDetection: 0\n    });\n    static #_3 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GraphComponent,\n      factory: GraphComponent.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return GraphComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}